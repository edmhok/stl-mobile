"use strict";

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _ = _interopRequireDefault(require("."));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const props = {
  label: 'test'
};
/* eslint-env jest */

it('renders', () => {
  let field = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, props)).toJSON();

  expect(field).toMatchSnapshot();
});
it('renders value', () => {
  let field = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    value: "text"
  }))).toJSON();

  expect(field).toMatchSnapshot();
});
it('renders disabled value', () => {
  let field = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    value: "text",
    disabled: true
  }))).toJSON();

  expect(field).toMatchSnapshot();
});
it('renders title', () => {
  let field = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    title: "field"
  }))).toJSON();

  expect(field).toMatchSnapshot();
});
it('renders counter', () => {
  let field = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    value: "text",
    characterRestriction: 10
  }))).toJSON();

  expect(field).toMatchSnapshot();
});
it('renders accessory', () => {
  let render = () => /*#__PURE__*/_react.default.createElement(_reactNative.Image, null);

  let field = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    renderLeftAccessory: render
  }))).toJSON();

  expect(field).toMatchSnapshot();
});
//# sourceMappingURL=test.js.map