"use strict";

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _ = _interopRequireDefault(require("."));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/* eslint-env jest */
const props = {
  fontSize: 16,
  activeFontSize: 12,
  contentInset: {
    label: 4
  },
  baseColor: 'black',
  tintColor: 'blue',
  errorColor: 'red',
  offset: {
    x0: 0,
    y0: 0,
    x1: 0,
    y1: 0
  },
  focusAnimation: new _reactNative.Animated.Value(0),
  labelAnimation: new _reactNative.Animated.Value(0),
  label: 'test'
};
it('renders label', () => {
  let label = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, props));

  expect(label.toJSON()).toMatchSnapshot();
});
it('renders empty label', () => {
  let label = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    label: null
  })));

  expect(label.toJSON()).toMatchSnapshot();
});
it('renders active label', () => {
  let label = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    labelAnimation: new _reactNative.Animated.Value(1)
  })));

  expect(label.toJSON()).toMatchSnapshot();
});
it('renders active focused label', () => {
  let label = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    labelAnimation: new _reactNative.Animated.Value(1),
    focusAnimation: new _reactNative.Animated.Value(1)
  })));

  expect(label.toJSON()).toMatchSnapshot();
});
it('renders errored label', () => {
  let label = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    labelAnimation: new _reactNative.Animated.Value(0),
    focusAnimation: new _reactNative.Animated.Value(-1)
  })));

  expect(label.toJSON()).toMatchSnapshot();
});
it('renders active errored label', () => {
  let label = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    labelAnimation: new _reactNative.Animated.Value(1),
    focusAnimation: new _reactNative.Animated.Value(-1)
  })));

  expect(label.toJSON()).toMatchSnapshot();
});
it('renders restricted label', () => {
  let label = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({
    restricted: true
  }, props)));

  expect(label.toJSON()).toMatchSnapshot();
});
it('renders styled label', () => {
  let style = {
    textTransform: 'uppercase'
  };

  let label = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({
    style: style
  }, props)));

  expect(label.toJSON()).toMatchSnapshot();
});
//# sourceMappingURL=test.js.map