export default class TextField extends React.PureComponent<any, any, any> {
    static defaultProps: {
        underlineColorAndroid: string;
        disableFullscreenUI: boolean;
        autoCapitalize: string;
        editable: boolean;
        animationDuration: number;
        fontSize: number;
        labelFontSize: number;
        tintColor: string;
        textColor: string;
        baseColor: string;
        errorColor: string;
        lineWidth: number;
        activeLineWidth: number;
        disabledLineWidth: number;
        lineType: string;
        disabledLineType: string;
        disabled: boolean;
    };
    static propTypes: any;
    static inputContainerStyle: {
        flexDirection: "row";
        alignItems: "flex-end";
    };
    static contentInset: {
        top: number;
        label: number;
        input: number;
        left: number;
        right: number;
        bottom: number;
    };
    static labelOffset: {
        x0: number;
        y0: number;
        x1: number;
        y1: number;
    };
    static getDerivedStateFromProps({ error, value }: {
        error: any;
        value: any;
    }, state: any): {
        error: any;
        value: any;
    };
    constructor(props: any);
    onBlur(event: any): void;
    onFocus(event: any): void;
    onPress: () => void;
    onChange(event: any): void;
    onChangeText(text: any): void;
    onContentSizeChange(event: any): void;
    onFocusAnimationEnd(): void;
    inputRef: any;
    mounted: boolean;
    focused: boolean;
    state: {
        value: any;
        error: any;
        focusAnimation: Animated.Value;
        labelAnimation: Animated.Value;
        receivedFocus: boolean;
        height: number;
    };
    createGetter(name: any): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(prevProps: any, prevState: any): void;
    startFocusAnimation(): void;
    startLabelAnimation(): void;
    setNativeProps(props: any): void;
    focusState(): 0 | 1 | -1;
    labelState(): 0 | 1;
    focus(): void;
    blur(): void;
    clear(): void;
    value(): string;
    setValue(value: any): void;
    isFocused(): any;
    isRestricted(): boolean;
    isErrored(): boolean;
    isDefaultVisible(): boolean;
    isPlaceholderVisible(): any;
    isLabelActive(): boolean;
    inputHeight(): any;
    inputContainerHeight(): any;
    inputProps(): {};
    inputStyle(): {
        fontSize: any;
        color: any;
        height: any;
    };
    renderLabel(props: any): JSX.Element;
    renderLine(props: any): JSX.Element;
    renderAccessory(prop: any): any;
    renderAffix(type: any): JSX.Element | null;
    renderHelper(): JSX.Element;
    renderInput(): JSX.Element;
    render(): JSX.Element;
}
import React from "react";
import { Animated } from "react-native";
