{"version":3,"names":["props","label","it","field","renderer","create","toJSON","expect","toMatchSnapshot","render"],"sources":["test.js"],"sourcesContent":["import { Image } from 'react-native';\nimport React from 'react';\nimport renderer from 'react-test-renderer';\n\nimport TextField from '.';\n\nconst props = {\n  label: 'test',\n};\n\n/* eslint-env jest */\n\nit('renders', () => {\n  let field = renderer.create(<TextField {...props} />).toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders value', () => {\n  let field = renderer.create(<TextField {...props} value=\"text\" />).toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders disabled value', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" disabled />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders default value', () => {\n  let field = renderer\n    .create(<TextField {...props} defaultValue=\"text\" />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders multiline value', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" multiline />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders title', () => {\n  let field = renderer.create(<TextField {...props} title=\"field\" />).toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders error', () => {\n  let field = renderer\n    .create(<TextField {...props} error=\"message\" />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders counter', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" characterRestriction={10} />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders restriction', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" characterRestriction={2} />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders prefix', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" prefix=\"$\" />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders suffix', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" suffix=\".com\" />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders left accessory', () => {\n  let render = () => <Image />;\n\n  let field = renderer\n    .create(<TextField {...props} renderLeftAccessory={render} />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders right accessory', () => {\n  let render = () => <Image />;\n\n  let field = renderer\n    .create(<TextField {...props} renderRightAccessory={render} />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n"],"mappings":"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"}