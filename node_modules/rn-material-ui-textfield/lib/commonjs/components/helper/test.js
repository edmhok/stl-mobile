"use strict";

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _ = _interopRequireDefault(require("."));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/* eslint-env jest */
const text = 'helper';
const props = {
  title: text,
  fontSize: 16,
  baseColor: 'black',
  errorColor: 'red',
  focusAnimation: new _reactNative.Animated.Value(0)
};
it('renders helper', () => {
  let helper = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, props)).toJSON();

  expect(helper).toMatchSnapshot();
});
it('renders disabled helper', () => {
  let helper = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    disabled: true
  }))).toJSON();

  expect(helper).toMatchSnapshot();
});
it('renders helper with error', () => {
  let helper = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({}, props, {
    error: text,
    focusAnimation: new _reactNative.Animated.Value(-1)
  }))).toJSON();

  expect(helper).toMatchSnapshot();
});
//# sourceMappingURL=test.js.map