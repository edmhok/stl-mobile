{"version":3,"names":["props","label","it","field","renderer","create","toJSON","expect","toMatchSnapshot","render"],"sources":["test.js"],"sourcesContent":["import { Image } from 'react-native';\nimport React from 'react';\nimport renderer from 'react-test-renderer';\n\nimport TextField from '.';\n\nconst props = {\n  label: 'test',\n};\n\n/* eslint-env jest */\n\nit('renders', () => {\n  let field = renderer.create(<TextField {...props} />).toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders value', () => {\n  let field = renderer.create(<TextField {...props} value=\"text\" />).toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders disabled value', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" disabled />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders default value', () => {\n  let field = renderer\n    .create(<TextField {...props} defaultValue=\"text\" />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders multiline value', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" multiline />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders title', () => {\n  let field = renderer.create(<TextField {...props} title=\"field\" />).toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders error', () => {\n  let field = renderer\n    .create(<TextField {...props} error=\"message\" />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders counter', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" characterRestriction={10} />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders restriction', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" characterRestriction={2} />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders prefix', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" prefix=\"$\" />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders suffix', () => {\n  let field = renderer\n    .create(<TextField {...props} value=\"text\" suffix=\".com\" />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders left accessory', () => {\n  let render = () => <Image />;\n\n  let field = renderer\n    .create(<TextField {...props} renderLeftAccessory={render} />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n\nit('renders right accessory', () => {\n  let render = () => <Image />;\n\n  let field = renderer\n    .create(<TextField {...props} renderRightAccessory={render} />)\n    .toJSON();\n\n  expect(field).toMatchSnapshot();\n});\n"],"mappings":"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"}