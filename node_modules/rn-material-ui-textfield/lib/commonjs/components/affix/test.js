"use strict";

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _ = _interopRequireDefault(require("."));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/* eslint-env jest */
const props = {
  color: 'black',
  fontSize: 16,
  labelAnimation: new _reactNative.Animated.Value(1)
};
const prefix = 'a';
const suffix = 'z';
it('renders prefix', () => {
  let affix = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({
    type: "prefix"
  }, props), prefix)).toJSON();

  expect(affix).toMatchSnapshot();
});
it('renders inactive prefix', () => {
  let affix = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({
    type: "prefix"
  }, props, {
    labelAnimation: new _reactNative.Animated.Value(0)
  }), prefix)).toJSON();

  expect(affix).toMatchSnapshot();
});
it('renders suffix', () => {
  let affix = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({
    type: "suffix"
  }, props), suffix)).toJSON();

  expect(affix).toMatchSnapshot();
});
it('renders inactive suffix', () => {
  let affix = _reactTestRenderer.default.create( /*#__PURE__*/_react.default.createElement(_.default, _extends({
    type: "suffix"
  }, props, {
    labelAnimation: new _reactNative.Animated.Value(0)
  }), suffix)).toJSON();

  expect(affix).toMatchSnapshot();
});
//# sourceMappingURL=test.js.map